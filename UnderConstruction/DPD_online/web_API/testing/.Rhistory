library(readr)
example_params_exp2_z <- read_delim("C:/xampp/htdocs/discounting-online/UnderConstruction/Probability_Discounting/data/example_params_exp2_z.csv",
";", escape_double = FALSE, trim_ws = TRUE)
View(example_params_exp2_z)
# Subject ID
id <- "example_params_exp2_z.csv"
path_trials <- paste("../data/", id)
path_trials <- paste("../data/", id, sep="")
example_params_exp2_z <- read_delim(path_trials,
";", escape_double = FALSE, trim_ws = TRUE)
getwd()
path_trials <- paste(".../data/", id, sep="")
example_params_exp2_z <- read_delim(path_trials,
";", escape_double = FALSE, trim_ws = TRUE)
path_trials <- paste("./../data/", id, sep="")
path_trials <- paste("../../data/", id, sep="")
example_params_exp2_z <- read_delim(path_trials,
";", escape_double = FALSE, trim_ws = TRUE)
path_trials <- paste("../../data/", id, "_params_exp2_z.csv", sep="")
id <- "example"
# Import Genereated Trials
library(readr)
path_trials <- paste("../../data/", id, "_params_exp2_z.csv", sep="")
path_params <- paste("../../data/", id, "_kappa.csv", sep="")
trials <- read_delim(path_trials, ";", escape_double = FALSE, trim_ws = TRUE)
params <- read_delim(path_params, ";", escape_double = FALSE, trim_ws = TRUE)
params <- read_csv(path_params)
View(params)
##### Plot Discounting Curve
discount <- function(value, h, odds) {
subj_value <- value * 1/(1+(h*odds))
return(subj_value)
}
View(trials)
params["task"]
params["task" == "reward"]
params["task" == "reward",]
params[,"task" == "reward"]
params["task" == "reward"]
params["task" == reward]
params["task"]
params["task",]
params["task",1]
params[,'task']
params[,'task'=='reward']
params[,which(params$task=="reward")]
which(params$task=="reward")
params[which(params$task=="reward"),]
params[which(params$task=="reward"),'hh']
odds <- 0:10
value <- 100
h_rew <- params[which(params$task=="reward"),'hh']
sv <- discount(100, h_rew, 0:10)
discount(100, h_rew, 0:10)
discount(100, h_rew, 10)
discount(100, h_rew, 100)
discount(100, h_rew, 1)
discount(100, h_rew, c(1:10))
odds <- 0:10
value <- 100
h_rew <- params[which(params$task=="reward"),'hh']
sv <- discount(value, h_rew, odds)
h_rew <- params[which(params$task=="reward"),'hh']
params[which(params$task=="reward"),'hh']
unlist(params[which(params$task=="reward"),'hh'])
odds <- 0:10
value <- 100
h_rew <- unlist(params[which(params$task=="reward"),'hh'])
sv <- discount(value, h_rew, odds)
odds <- seq(0:10)
odds <- seq(0:10, 0.1)
?seq
odds <- seq(0:10, by=0.1)
odds <- seq(0, 10, 0.1)
odds <- seq(0, 10, 0.1)
value <- 100
h_rew <- unlist(params[which(params$task=="reward"),'hh'])
sv <- discount(value, h_rew, odds)
discount_df <- tibble(odds, sv)
# RewAD3: PD, DD and DPD
# Pilot Study: Probability Discounting only
# check generated trials for run B
library(tidyverse)
discount_df <- tibble(odds, sv)
geom_line(size = 1)
geom_line(size = 1)
ggplot(discount_df, aes(x = odds, y = sv)) +
geom_line(size = 1)
odds <- seq(0, 10, 0.1)
value <- 20
h_rew <- unlist(params[which(params$task=="reward"),'hh'])
sv <- discount(value, h_rew, odds)
discount_df <- tibble(odds, sv)
ggplot(discount_df, aes(x = odds, y = sv)) +
geom_line(size = 1)
##### Plot Generated Trials
trials %>%
select(immOpt == 20)
trials %>%
select(immOpt == 20)
##### Plot Generated Trials
trials %>%
filter(immOpt == 20)
##### Plot Generated Trials
trials %>%
filter(immOpt == 20, task == "reward")
##### Plot Generated Trials
trials %>%
filter(immOpt == 20 & task == "reward") %>%
ggplot(trials, aes(x = odds, y = delOpt)) +
geom_line(size = 1)
##### Plot Generated Trials
trials %>%
filter(immOpt == 20 & task == "reward") %>%
ggplot(aes(x = odds, y = delOpt)) +
geom_line(size = 1)
##### Plot Generated Trials
trials %>%
filter(immOpt == 20 & task == "reward") %>%
ggplot(aes(x = odds, y = delOpt)) +
geom_point()
##### Plot Generated Trials
trials %>%
filter(immOpt == 20 & task == "reward") %>%
ggplot(aes(x = probability, y = delOpt)) +
geom_point()
##### Plot Generated Trials
trials %>%
filter(immOpt == 20 & task == "reward") %>%
ggplot(aes(x = odds, y = delOpt)) +
geom_point()
##### Plot Generated Trials
trials %>%
filter(immOpt == 20 & task == "reward") %>%
ggplot(aes(x = odds, y = delOpt)) +
geom_point() +
geom_smooth()
##### Plot Generated Trials
trials %>%
filter(immOpt == 20 & task == "reward") %>%
ggplot(aes(x = odds, y = delOpt)) +
geom_point()
##### Plot Generated Trials
trials %>%
filter(immOpt == 20 & task == "reward") %>%
ggplot(aes(x = odds, y = delOpt, color = p_cert)) +
geom_point()
ggplot(discount_df, aes(x = odds, y = sv)) +
geom_line(size = 1)
##### Plot Generated Trials
trials %>%
filter(immOpt == 20 & task == "reward") %>%
ggplot(aes(x = odds, y = delOpt, color = p_cert)) +
geom_point()
odds <- seq(0, 10, 0.1)
value <- 465
h_rew <- unlist(params[which(params$task=="reward"),'hh'])
sv <- discount(value, h_rew, odds)
discount_df <- tibble(odds, sv)
ggplot(discount_df, aes(x = odds, y = sv)) +
geom_line(size = 1)
sv
odds <- seq(0, 10, 0.1)
value <- 433
h_rew <- unlist(params[which(params$task=="reward"),'hh'])
sv <- discount(value, h_rew, odds)
discount_df <- tibble(odds, sv)
ggplot(discount_df, aes(x = odds, y = sv)) +
geom_line(size = 1)
sv
trials %>%
filter(immOpt == 20 & task == "reward") %>%
ggplot(aes(x = odds, y = delOpt, color = p_cert)) +
geom_point()
##### Plot Generated Trials
trials %>%
filter(immOpt == 20 & task == "reward") %>%
ggplot(aes(x = probability, y = delOpt, color = p_cert)) +
geom_point()
# Subject ID
id_georgia <- "example"
id_mathieu <- "0ko4o6yky"
# Import Genereated Trials
path_georgia <- paste("../../data/", id_georgia, "_params_exp2_z.csv", sep="")
trials_georgia <- read_delim(path_georgia, ";", escape_double = FALSE, trim_ws = TRUE)
path_mathieu <- paste("../../data/", id_mathieu, "_params_exp2_z.csv", sep="")
trials_mathieu <- read_delim(path_mathieu, ";", escape_double = FALSE, trim_ws = TRUE)
# Import Discounting Parameters
path_params_georgia <- paste("../../data/", id_georgia, "_kappa.csv", sep="")
params_georgia <- read_csv(path_params)
path_params_mathieu <- paste("../../data/", id_mathieu, "_kappa.csv", sep="")
params_mathieu <- read_csv(path_params)
path_params_georgia <- paste("../../data/", id_georgia, "_kappa.csv", sep="")
params_georgia <- read_csv(path_params_georgia)
path_params_mathieu <- paste("../../data/", id_mathieu, "_kappa.csv", sep="")
params_mathieu <- read_csv(path_params_mathieu)
trials_mathieu <- read_csv(path_mathieu)
left_join(trials_georgia, trials_mathieu)
left_join(trials_georgia, trials_mathieu, by = c("id", "immOpt", "odds", "probability", "task", "p_cert"))
# Subject ID
id_g_py <- "example"
id_g_ml <- "georgia"
id_mathieu <- "0ko4o6yky"
# Import Genereated Trials
path_g_py <- paste("../../data/", id_g_py, "_params_exp2_z.csv", sep="")
trials_g_py <- read_delim(path_georgia, ";", escape_double = FALSE, trim_ws = TRUE)
path_g_ml <- paste("../../data/", id_g_py, "_params_exp2_z.csv", sep="")
trials_g_ml <- read_delim(path_g_py, ";", escape_double = FALSE, trim_ws = TRUE)
path_g_ml <- paste("../../data/", id_g_ml, "_params_exp2_z.csv", sep="")
trials_g_ml <- read_delim(path_g_py, ";", escape_double = FALSE, trim_ws = TRUE)
path_g_ml <- paste("../../data/", id_g_ml, "_params_exp2_z.csv", sep="")
trials_g_ml <- read_delim(path_g_ml, ";", escape_double = FALSE, trim_ws = TRUE)
path_g_ml <- paste("../../data/", id_g_ml, "_params_exp2_z.csv", sep="")
trials_g_ml <- read_delim(path_g_ml, ";", escape_double = FALSE, trim_ws = TRUE)
path_g_ml <- paste("../../data/", id_g_ml, "_params_exp2_z.csv", sep="")
trials_g_ml <- read_delim(path_g_ml, ";", escape_double = FALSE, trim_ws = TRUE)
left_join(trials_g_py, trials_g_ml, by = c("id", "immOpt", "odds", "probability", "task", "p_cert"))
left_join(trials_g_py, trials_g_ml, by = c("immOpt", "odds", "probability", "task", "p_cert"))
ml_py['valdif'] <- ml_p<['delOpt.x']-ml_py['delOpt.y']
ml_py['valdif'] <- ml_py['delOpt.x']-ml_py['delOpt.y']
ml_py <- left_join(trials_g_py, trials_g_ml, by = c("immOpt", "odds", "probability", "task", "p_cert"))
ml_py['valdif'] <- ml_py['delOpt.x']-ml_py['delOpt.y']
View(ml_py)
trials
# Flag problematic trials:
# uncertain < certain, < 0, NA/NaN, ...
trials %>% mutate(problem = ifelse(delOpt < immOpt), "problem", "check")
# Flag problematic trials:
# uncertain < certain, < 0, NA/NaN, ...
trials <- trials %>% mutate(problem = ifelse(delOpt < immOpt, "problem", "check")
# Flag problematic trials:
# uncertain < certain, < 0, NA/NaN, ...
trials <- trials %>% mutate(problem = ifelse(delOpt < immOpt, "problem", "check"))
# Flag problematic trials:
# uncertain < certain, < 0, NA/NaN, ...
trials <- trials %>% mutate(problem = ifelse(delOpt < immOpt, "problem", "check"))
# Flag problematic trials:
# uncertain < certain, < 0, NA/NaN, ...
trials <- trials %>% mutate(problem = ifelse(task == "reward", ifelse(delOpt < immOpt, "problem", "check"),
task == "loss", ifelse(delOpt > immOpt, "problem", "check")))
# Flag problematic trials:
# uncertain < certain, < 0, NA/NaN, ...
trials <- trials %>% mutate(problem = ifelse(task == "reward", ifelse(delOpt < immOpt, "problem", "check"),
ifelse(delOpt > immOpt, "problem", "check")))
rm(list=ls())
# Subject ID
#id <- "example" # (= run B, generated by Python, for simulated run A)
id <- "0ko4o6yky"
# Import Genereated Trials
path_trials <- paste("../../data/", id, "_params_exp2_z.csv", sep="")
#trials <- read_delim(path_trials, ";", escape_double = FALSE, trim_ws = TRUE)
trials <- read_csv(path_mathieu)
# Import Discounting Parameters
path_params <- paste("../../data/", id, "_kappa.csv", sep="")
params <- read_csv(path_params)
# Subject ID
#id <- "example" # (= run B, generated by Python, for simulated run A)
id <- "0ko4o6yky"
# Import Genereated Trials
path_trials <- paste("../../data/", id, "_params_exp2_z.csv", sep="")
#trials <- read_delim(path_trials, ";", escape_double = FALSE, trim_ws = TRUE)
trials <- read_csv(path_trials)
##### REWARD
# Discount function plot
discount <- function(value, h, odds) {
subj_value <- value * 1/(1+(h*odds))
return(subj_value)
}
odds <- seq(0, 10, 0.1)
value <- 20
h_rew <- unlist(params[which(params$task=="reward"),'hh'])
sv <- discount(value, h_rew, odds)
discount_df <- tibble(odds, sv)
ggplot(discount_df, aes(x = odds, y = sv)) +
geom_line(size = 1)
trials %>%
filter(immOpt == 20 & task == "reward") %>%
ggplot(aes(x = probability, y = delOpt, color = p_cert)) +
geom_point()
# Flag problematic trials:
# uncertain < certain, < 0, NA/NaN, ...
trials <- trials %>% mutate(problem = ifelse(task == "reward", ifelse(delOpt < immOpt, "problem", "check"),
ifelse(delOpt > immOpt, "problem", "check")))
odds <- seq(0, 10, 0.1)
value <- 20
h_rew <- unlist(params[which(params$task=="loss"),'hh'])
sv <- discount(value, h_loss, odds)
discount_df <- tibble(odds, sv)
ggplot(discount_df, aes(x = odds, y = sv)) +
geom_line(size = 1)
odds <- seq(0, 10, 0.1)
value <- 20
h_loss <- unlist(params[which(params$task=="loss"),'hh'])
sv <- discount(value, h_loss, odds)
discount_df <- tibble(odds, sv)
ggplot(discount_df, aes(x = odds, y = sv)) +
geom_line(size = 1)
trials %>%
filter(immOpt == 20 & task == "loss") %>%
ggplot(aes(x = probability, y = delOpt, color = p_cert)) +
geom_point()
# Plot Generated Trials
# Run B generated from Python
trials %>%
filter(immOpt == -20 & task == "loss") %>%
ggplot(aes(x = probability, y = delOpt, color = p_cert)) +
geom_point()
# Flag problematic trials:
# uncertain < certain, < 0, NA/NaN, ...
trials <- trials %>% mutate(problem = ifelse(task == "reward", ifelse(delOpt <= immOpt, "problem", "check"),
ifelse(delOpt >= immOpt, "problem", "check")))
rm(list=ls())
library(tidyverse)
library(readr)
##### Data Import
# Subject ID
#id <- "example" # (= run B, generated by Python, for simulated run A)
id <- "0ko4o6yky"
# Import Genereated Trials
path_trials <- paste("../../data/", id, "_params_exp2_z.csv", sep="")
#trials <- read_delim(path_trials, ";", escape_double = FALSE, trim_ws = TRUE)
trials <- read_csv(path_trials)
# Import Discounting Parameters
path_params <- paste("../../data/", id, "_kappa.csv", sep="")
params <- read_csv(path_params)
rm(list=ls())
library(tidyverse)
library(readr)
##### Data Import
# Subject ID
#id <- "example" # (= run B, generated by Python, for simulated run A)
id <- "0ko4o6yky"
# Import Genereated Trials
path_trials <- paste("../../data/", id, "_params_exp2_z.csv", sep="")
#trials <- read_delim(path_trials, ";", escape_double = FALSE, trim_ws = TRUE)
trials <- read_csv(path_trials)
# Import Discounting Parameters
path_params <- paste("../../data/", id, "_kappa.csv", sep="")
params <- read_csv(path_params)
# Flag problematic trials:
# uncertain < certain, < 0, NA/NaN, ...
trials <- trials %>% mutate(problem = ifelse(task == "reward", ifelse(delOpt <= immOpt, "problem", "check"),
ifelse(delOpt >= immOpt, "problem", "check")))
View(trials)
# sort problematic trials by task, immOpt, probability, p_cert
trials %>%
group_by(task, probability, p_cert) %>%
count(n)
# sort problematic trials by task, immOpt, probability, p_cert
trials %>%
group_by(task, probability, p_cert) %>%
summarize(n = n())
# sort problematic trials by task, immOpt, probability, p_cert
trials %>%
filter(task == "reward") %>%
group_by(immOpt, probability, p_cert) %>%
summarize(n = n())
